// <auto-generated />
using System;
using AdminExtension.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminExtension.Migrations
{
    [DbContext(typeof(TodoContext))]
    partial class TodoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("AdminExtension.Models.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid?>("CompletedByUserId")
                        .HasColumnType("TEXT")
                        .HasColumnName("completed_by_user_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("is_completed");

                    b.Property<Guid>("TodoListId")
                        .HasColumnType("TEXT")
                        .HasColumnName("todo_list_id");

                    b.HasKey("Id");

                    b.HasIndex("TodoListId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("AdminExtension.Models.TodoList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("TodoLists", (string)null);
                });

            modelBuilder.Entity("AdminExtension.Models.TodoListAllowedUser", b =>
                {
                    b.Property<Guid>("TodoListId")
                        .HasColumnType("TEXT")
                        .HasColumnName("todo_list_id");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("user_guid");

                    b.HasKey("TodoListId", "UserGuid");

                    b.ToTable("TodoListAllowedUsers", (string)null);
                });

            modelBuilder.Entity("AdminExtension.Models.TodoItem", b =>
                {
                    b.HasOne("AdminExtension.Models.TodoList", "TodoList")
                        .WithMany("TodoItems")
                        .HasForeignKey("TodoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoList");
                });

            modelBuilder.Entity("AdminExtension.Models.TodoListAllowedUser", b =>
                {
                    b.HasOne("AdminExtension.Models.TodoList", "TodoList")
                        .WithMany("AllowedUsers")
                        .HasForeignKey("TodoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoList");
                });

            modelBuilder.Entity("AdminExtension.Models.TodoList", b =>
                {
                    b.Navigation("AllowedUsers");

                    b.Navigation("TodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
