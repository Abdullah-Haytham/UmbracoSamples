
@using Umbraco.Extensions
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Home>
@{
    Layout = "masterTemplate.cshtml";
ViewData["Title"] = "All Blog Posts"; // Set the title for the page
}

<div class="container my-4">
    <h1 class="h2 text-center mb-5 text-gray-800">Latest Blog Posts</h1>

    <div id="blogPostsContainer" class="row">
        <!-- Blog posts will be loaded here by JavaScript -->
        <div class="col-12 text-center text-muted">Loading posts...</div>
    </div>

    <div id="message" class="alert d-none mt-4" role="alert"></div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', async () => {
        const blogPostsContainer = document.getElementById('blogPostsContainer');
        const messageDiv = document.getElementById('message');

        // Function to show messages
        function showMessage(msg, type) {
            messageDiv.textContent = msg;
            messageDiv.classList.remove('d-none', 'alert-success', 'alert-danger', 'alert-info');
            messageDiv.classList.add(`alert-${type}`);
        }

        // Clear initial loading message
        blogPostsContainer.innerHTML = '';

        try {
            const response = await fetch('/api/posts/all');

            if (response.ok) {
                const posts = await response.json();

                if (posts && posts.length > 0) {
                    posts.forEach(post => {
                        const postCard = document.createElement('div');
                        postCard.className = 'col-md-6 col-lg-4 mb-4'; // Responsive grid for cards
                        postCard.innerHTML = `
                            <div class="card h-100 rounded shadow-sm">
                                <div class="card-body">
                                    <h5 class="card-title text-gray-800">${post.title}</h5>
                                    <h6 class="card-subtitle mb-2 text-muted">By User ID: ${post.userId || 'N/A'}</h6>
                                    <p class="card-text text-gray-700">${post.content.substring(0, 150)}...</p>
                                </div>
                                <div class="card-footer bg-light border-top-0 rounded-bottom">
                                    <small class="text-muted">Posted on: ${new Date(post.createdAt).toLocaleDateString()}</small>
                                    <br>
                                    <a href="/post-details/${post.id}" class="btn btn-sm btn-outline-primary mt-2 rounded">Read More</a>
                                </div>
                            </div>
                        `;
                        blogPostsContainer.appendChild(postCard);
                    });
                } else {
                    blogPostsContainer.innerHTML = '<div class="col-12 text-center text-muted">No blog posts found.</div>';
                }
            } else {
                const errorText = await response.text();
                showMessage(`Error loading posts: ${response.status} - ${errorText || response.statusText}`, 'danger');
                blogPostsContainer.innerHTML = '<div class="col-12 text-center text-muted">Failed to load posts.</div>';
            }
        } catch (error) {
            showMessage(`Network error: ${error.message}`, 'danger');
            blogPostsContainer.innerHTML = '<div class="col-12 text-center text-muted">An error occurred while fetching posts.</div>';
            console.error('Fetch error:', error);
        }
    });
</script>